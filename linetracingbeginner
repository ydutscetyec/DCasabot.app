#include <CytronMotorDriver.h>

// === Motor Setup ===
CytronMD motorLeft(PWM_PWM, 12, 13);   // Left motor: PWM 12, DIR 13
CytronMD motorRight(PWM_PWM, 14, 27);  // Right motor: PWM 14, DIR 27

#define MAX_SPEED 255

// === Line Sensors (QTR-1RC Digital) ===
#define SENSOR_LEFT   25
#define SENSOR_MIDDLE 33
#define SENSOR_RIGHT  32

// === PID Constants ===
float Kp = 80.0;
float Ki = 0.0;
float Kd = 50.0;

// === PID Variables ===
int error = 0;
int lastError = 0;
int integral = 0;

void setup() {
  Serial.begin(115200);

  pinMode(SENSOR_LEFT, INPUT_PULLUP);
  pinMode(SENSOR_MIDDLE, INPUT_PULLUP);
  pinMode(SENSOR_RIGHT, INPUT_PULLUP);

  Serial.println("=== ESP32 3-Sensor PID Line Follower ===");
}

void loop() {
  bool left   = (digitalRead(SENSOR_LEFT) == LOW);   // LOW = line detected
  bool middle = (digitalRead(SENSOR_MIDDLE) == LOW);
  bool right  = (digitalRead(SENSOR_RIGHT) == LOW);

  // === Determine Error ===
  if (middle) error = 0;          // Line centered
  else if (left) error = -1;      // Line to left
  else if (right) error = 1;      // Line to right
  else error = lastError;         // Line lost â†’ keep last direction

  // === PID Calculation ===
  integral += error;
  int derivative = error - lastError;
  lastError = error;

  float output = (Kp * error) + (Ki * integral) + (Kd * derivative);

  int leftSpeed = MAX_SPEED - output;
  int rightSpeed = MAX_SPEED + output;

  leftSpeed = constrain(leftSpeed, 0, MAX_SPEED);
  rightSpeed = constrain(rightSpeed, 0, MAX_SPEED);

  // === Move Motors ===
  moveRobot(leftSpeed, rightSpeed);

  // Debug
  Serial.print("L:"); Serial.print(left);
  Serial.print(" M:"); Serial.print(middle);
  Serial.print(" R:"); Serial.print(right);
  Serial.print(" | Err: "); Serial.print(error);
  Serial.print(" | Lspd: "); Serial.print(leftSpeed);
  Serial.print(" | Rspd: "); Serial.println(rightSpeed);

  delay(10);
}

// === Motor Control ===
void moveRobot(int leftSpeed, int rightSpeed) {
  motorLeft.setSpeed(leftSpeed);
  motorRight.setSpeed(rightSpeed);
}

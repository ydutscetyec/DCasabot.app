#include <CytronMotorDriver.h>

// === Motor Setup ===
CytronMD motorLeft(PWM_PWM, 12, 13);   // Left motor: PWM = 12, DIR = 13
CytronMD motorRight(PWM_PWM, 14, 27);  // Right motor: PWM = 14, DIR = 27

// === Sensor Pins ===
#define SENSOR_LEFT   25
#define SENSOR_BACK   33  // Treat as center sensor
#define SENSOR_RIGHT  32

// === Speed Settings ===
int baseSpeed = 150;   // Forward speed
int turnSpeed = 120;   // Turning speed

void setup() {
  Serial.begin(115200);
  pinMode(SENSOR_LEFT, INPUT_PULLUP);
  pinMode(SENSOR_BACK, INPUT_PULLUP);
  pinMode(SENSOR_RIGHT, INPUT_PULLUP);
  Serial.println("=== SIMPLE LINE FOLLOWER START ===");
}

void loop() {
  bool left  = digitalRead(SENSOR_LEFT);
  bool back  = digitalRead(SENSOR_BACK);  // center
  bool right = digitalRead(SENSOR_RIGHT);

  // Debugging
  Serial.print("L: "); Serial.print(left == LOW ? "LINE" : "WHITE");
  Serial.print(" | C: "); Serial.print(back == LOW ? "LINE" : "WHITE");
  Serial.print(" | R: "); Serial.println(right == LOW ? "LINE" : "WHITE");

  // === Line Following Logic ===
  if (back == LOW && left == HIGH && right == HIGH) {
    // Center on line
    forward();
  } 
  else if (left == LOW && right == HIGH) {
    // Line is to the left
    turnLeft();
  } 
  else if (right == LOW && left == HIGH) {
    // Line is to the right
    turnRight();
  } 
  else if (left == LOW && right == LOW) {
    // Line split or intersection
    forward();
  } 
  else {
    // Lost line
    stopMotor();
  }

  delay(20);
}

// === Movement Functions ===
void forward() {
  motorLeft.setSpeed(baseSpeed);
  motorRight.setSpeed(baseSpeed);
}

void turnLeft() {
  motorLeft.setSpeed(0);
  motorRight.setSpeed(turnSpeed);
}

void turnRight() {
  motorLeft.setSpeed(turnSpeed);
  motorRight.setSpeed(0);
}

void stopMotor() {
  motorLeft.setSpeed(0);
  motorRight.setSpeed(0);
}

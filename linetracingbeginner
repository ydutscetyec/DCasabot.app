#include <CytronMotorDriver.h>

// ===== MOTOR SETUP =====
CytronMD motorLeft(PWM_PWM, 12, 13);
CytronMD motorRight(PWM_PWM, 14, 27);

#define MAX_SPEED 255

// ===== LINE SENSORS =====
#define SENSOR_LEFT   25
#define SENSOR_MIDDLE 33
#define SENSOR_RIGHT  32

// ===== PID CONSTANTS =====
float Kp = 100.0;
float Ki = 0.0;
float Kd = 50.0;

// ===== PID VARIABLES =====
int error = 0;
int lastError = 0;
int integral = 0;

void setup() {
  pinMode(SENSOR_LEFT, INPUT_PULLUP);
  pinMode(SENSOR_MIDDLE, INPUT_PULLUP);
  pinMode(SENSOR_RIGHT, INPUT_PULLUP);
  Serial.begin(115200);
  Serial.println("=== PID Line Follower with Recovery ===");
}

// ===== MAIN LOOP =====
void loop() {
  bool left   = (digitalRead(SENSOR_LEFT) == LOW);
  bool middle = (digitalRead(SENSOR_MIDDLE) == LOW);
  bool right  = (digitalRead(SENSOR_RIGHT) == LOW);

  // --- Determine error ---
  if (middle)      error = 0;   // Centered
  else if (left)   error = -1;  // Drift left
  else if (right)  error = 1;   // Drift right
  else             error = 99;  // No line detected

  // --- Line lost recovery ---
  if (error == 99) {
    // Keep turning in the last known direction
    if (lastError < 0) moveRobot(100, -100);  // Turn left slowly
    else if (lastError > 0) moveRobot(-100, 100); // Turn right slowly
    else moveRobot(0, 0); // No clue, stop
    return;
  }

  // --- PID Calculation ---
  integral += error;
  int derivative = error - lastError;
  lastError = error;

  float output = (Kp * error) + (Ki * integral) + (Kd * derivative);

  int speedL = MAX_SPEED - output;
  int speedR = MAX_SPEED + output;

  speedL = constrain(speedL, -MAX_SPEED, MAX_SPEED);
  speedR = constrain(speedR, -MAX_SPEED, MAX_SPEED);

  moveRobot(speedL, speedR);

  // Debugging
  Serial.print("L:"); Serial.print(left);
  Serial.print(" M:"); Serial.print(middle);
  Serial.print(" R:"); Serial.print(right);
  Serial.print(" | Error: "); Serial.print(error);
  Serial.print(" | Lspeed: "); Serial.print(speedL);
  Serial.print(" | Rspeed: "); Serial.println(speedR);

  delay(10);
}

// ===== MOTOR FUNCTION =====
void moveRobot(int leftSpeed, int rightSpeed) {
  motorLeft.setSpeed(leftSpeed);
  motorRight.setSpeed(rightSpeed);
}
